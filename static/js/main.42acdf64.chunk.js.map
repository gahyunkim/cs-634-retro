{"version":3,"sources":["components/FeedbackField.js","actions/feedbackActions.js","components/FeedbackList.js","components/ConnectedList.js","App.js","reducers/feedbacks.js","reducers/totalReducer.js","index.js"],"names":["connect","_ref","input","dispatch","react","TextField","placeholder","inputRef","node","onKeyPress","e","key","console","log","value","type","text","state","feedbacks","react_default","a","createElement","List","map","feedback","ListItem","ListItemText","primary","FeedbackList","App","Card","style","width","CardBody","fontSize","components_FeedbackField","components_FeedbackList","arguments","length","undefined","action","concat","Object","toConsumableArray","combineReducers","store","createStore","reducer","render","es","src_App","document","getElementById"],"mappings":"0MAwBeA,gBAlBO,SAAAC,GAAgB,IAC9BC,EADgBC,EAAcF,EAAdE,SAGpB,OACIC,EAAA,cAACC,EAAA,EAAD,CACIC,YAAY,+CACZC,SAAU,SAAAC,GAAI,OAAIN,EAAQM,GAC1BC,WAAY,SAACC,GACK,UAAVA,EAAEC,MACFC,QAAQC,IAAIX,EAAMY,OAClBX,ECfgB,CAChCY,KAAM,eACNC,KDaqCd,EAAMY,QAC3BZ,EAAMY,MAAM,oCEEjBd,cAJS,SAAAiB,GAAK,MAAK,CAC9BC,UAAWD,EAAMC,YAGNlB,CAbM,SAAAC,GAAA,IAAEiB,EAAFjB,EAAEiB,UAAF,OACjBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKJ,EAAUK,IAAI,SAAAC,GAAQ,OACvBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAcC,QAASH,EAASR,aCH7BhB,YAJS,SAAAiB,GAAK,MAAK,CAC9BC,UAAWD,EAAMC,YAGNlB,CAAyB4B,GCazBC,MAdf,WACC,OACCV,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,MAAO,CAACC,MAAO,QACpBb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACCd,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACG,SAAU,SAAvB,WAGFf,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,gBCDYlB,EAdG,WAAwB,IAAvBD,EAAuBoB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtC,OAAOC,EAAOzB,MACV,IAAK,eACD,SAAA0B,OAAAC,OAAAC,EAAA,EAAAD,CACOzB,GADP,CAEI,CACID,KAAMwB,EAAOxB,QAGzB,QACI,OAAOC,ICPJ2B,cAAgB,CAC3B1B,cCIE2B,EAAQC,YAAYC,GAC1BC,iBACI7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAUJ,MAAOA,GACb1B,EAAAC,EAAAC,cAAC6B,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.42acdf64.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux'\nimport { addFeedback } from \"../actions/feedbackActions\";\nimport TextField from '@material-ui/core/TextField';\n\n\nconst FeedbackField = ({dispatch}) => {\n    let input;\n\n    return (\n        <TextField\n            placeholder=\"What went well? What could have gone better?\"\n            inputRef={node => input = node}\n            onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                    console.log(input.value);\n                    dispatch(addFeedback(input.value));\n                    input.value=''\n                }\n            }}\n        />\n    )\n}\n\nexport default connect()(FeedbackField)","\nexport const addFeedback = text => ({\n    type: 'ADD_FEEDBACK',\n    text\n})","import React from \"react\";\nimport List from '@material-ui/core/List';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {connect} from \"react-redux\";\n\nconst FeedbackList = ({feedbacks}) => (\n    <List>\n        {feedbacks.map(feedback =>\n        <ListItem>\n            <ListItemText primary={feedback.text}/>\n        </ListItem>)}\n    </List>\n)\n\nconst mapStateToProps = state => ({\n    feedbacks: state.feedbacks\n})\n\nexport default connect(mapStateToProps)(FeedbackList);","import { connect } from 'react-redux'\nimport FeedbackList from './FeedbackList';\n\nconst mapStateToProps = state => ({\n    feedbacks: state.feedbacks\n})\n\nexport default connect(mapStateToProps)(FeedbackList);","import React from \"react\";\nimport {Card, CardBody} from \"reactstrap\";\nimport FeedbackField from \"./components/FeedbackField\";\nimport ConnectedList from \"./components/ConnectedList\";\nimport FeedbackList from \"./components/FeedbackList\";\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Card style={{width: \"25%\"}}>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<div style={{fontSize: \"40px\"}}>Retro</div>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t\t<FeedbackField />\n\t\t\t<FeedbackList/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const feedbacks = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_FEEDBACK':\n            return [\n                ...state,\n                {\n                    text: action.text\n                }\n            ]\n        default:\n            return state\n    }\n}\n\nexport default feedbacks;","import { combineReducers } from 'redux'\nimport feedbacks from './feedbacks'\n\nexport default combineReducers({\n    feedbacks\n})\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reducer from './reducers/totalReducer';\n\n\nconst store = createStore(reducer);\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}