{"version":3,"sources":["components/FeedbackField.js","actions/feedbackActions.js","components/FeedbackList.js","App.js","reducers/positives.js","reducers/negatives.js","reducers/actions.js","reducers/totalReducer.js","index.js"],"names":["connect","_ref","input","dispatch","placeholder","columnType","console","log","react","TextField","style","padding","width","inputRef","node","onKeyPress","e","key","type","text","value","addNegative","addAction","FeedbackList","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","items","_this$props","props","positives","negatives","actions","react_default","a","createElement","List","map","item","ListItem","ListItemText","primary","React","Component","state","useStyles","makeStyles","theme","root","flexGrow","paper","spacing","textAlign","marginBottom","backgroundColor","color","palette","secondary","paperList","App","classes","Card","CardBody","className","Grid","container","xs","Paper","concat","components_FeedbackField","components_FeedbackList","length","undefined","action","toConsumableArray","retroApp","combineReducers","store","createStore","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bbf2654c.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport {addAction, addNegative, addPositive} from \"../actions/feedbackActions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst FeedbackField = ({ dispatch, placeholder, columnType }) => {\n\tlet input;\n\tconsole.log(\"ran\");\n\n\treturn (\n\t\t<TextField\n\t\t\tstyle={{\n\t\t\t\tpadding: \"20px\",\n\t\t\t\twidth: \"80%\"\n\t\t\t}}\n\t\t\tplaceholder={placeholder}\n\t\t\tinputRef={node => (input = node)}\n\t\t\tonKeyPress={e => {\n\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\tconsole.log(\"entered\");\n\t\t\t\t\tconsole.log(\"column type\", columnType);\n\t\t\t\t\tif (columnType === \"positive\") {\n\t\t\t\t\t\tdispatch(addPositive(input.value));\n\t\t\t\t\t} else if (columnType === \"negative\") {\n\t\t\t\t\t\tdispatch(addNegative(input.value));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(addAction(input.value))\n\t\t\t\t\t}\n\t\t\t\t\tinput.value = \"\";\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default connect()(FeedbackField);\n","\nexport const addPositive = text => ({\n    type: 'ADD_POSITIVE',\n    text\n})\n\n\nexport const addNegative = text => ({\n    type: 'ADD_NEGATIVE',\n    text\n})\n\n\nexport const addAction = text => ({\n    type: 'ADD_ACTION',\n    text\n})","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { connect } from \"react-redux\";\n\ntype Props = {\n\tpositives: [],\n\tnegatives: [],\n\tactions: [],\n\tcolumnType: string\n}\n\nexport class FeedbackList extends React.Component<Props> {\n\trender() {\n\t\tlet items;\n\t\tconst {columnType, positives, negatives, actions} = this.props;\n\t\tif (columnType === \"positives\") {\n\t\t\titems = positives;\n\t\t} else if (columnType === \"negatives\") {\n\t\t\titems = negatives;\n\t\t} else {\n\t\t\titems = actions;\n\t\t}\n\n\t\treturn (\n\t\t\t<List>\n\t\t\t\t{items.map(item => (\n\t\t\t\t\t<ListItem key={item.text}>\n\t\t\t\t\t\t<ListItemText primary={item.text}/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tpositives: state.positives,\n\tnegatives: state.negatives,\n\tactions: state.actions\n});\n\nexport default connect(mapStateToProps)(FeedbackList);\n","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FeedbackField from \"./components/FeedbackField\";\nimport FeedbackList from \"./components/FeedbackList\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(0),\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: \"10px\",\n\t\tbackgroundColor: \"#f0f0f0\",\n\t\tcolor: theme.palette.text.secondary\n\t},\n\tpaperList: {\n\t\tpadding: theme.spacing(0),\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: \"10px\",\n\t\tbackgroundColor: \"#ffffff\",\n\t\tcolor: theme.palette.text.secondary\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<Card>\n\t\t\t\t<CardBody className=\"header\">\n\t\t\t\t\t<div className=\"headerBody\">Retro</div>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\n\t\t\t<Card style={{ padding: \"15px\" }}>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t<Paper className={`${classes.paper}`}>\n\t\t\t\t\t\t\t\t\t<FeedbackField placeholder=\"What went well?\" columnType=\"positive\"/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t<div className={classes.paperList}>\n\t\t\t\t\t\t\t\t\t<FeedbackList columnType=\"positives\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t<Paper className={`${classes.paper}`}>\n\t\t\t\t\t\t\t\t\t<FeedbackField placeholder=\"What could have gone better?\"columnType=\"negative\"/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t<div className={classes.paperList}>\n\t\t\t\t\t\t\t\t\t<FeedbackList columnType=\"negatives\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t<Paper className={`${classes.paper}`}>\n\t\t\t\t\t\t\t\t\t<FeedbackField placeholder=\"Action Items\" columnType=\"action\"/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t<div className={classes.paperList}>\n\t\t\t\t\t\t\t\t\t<FeedbackList columnType=\"actions\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const positives = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_POSITIVE':\n            return [\n                ...state,\n                {\n                    text: action.text\n                }\n            ]\n        default:\n            return state\n    }\n}\n\nexport default positives;","const negatives = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_NEGATIVE':\n            return [\n                ...state,\n                {\n                    text: action.text\n                }\n            ]\n        default:\n            return state\n    }\n}\n\nexport default negatives;","const actions = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_ACTION':\n            return [\n                ...state,\n                {\n                    text: action.text\n                }\n            ]\n        default:\n            return state\n    }\n}\n\nexport default actions;","import { combineReducers } from 'redux'\nimport positives from './positives'\nimport negatives from \"./negatives\";\nimport actions from \"./actions\";\n\nconst retroApp = combineReducers({\n    positives,\n    negatives,\n    actions\n});\n\nexport default retroApp;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport retroApp from './reducers/totalReducer';\n\n\nconst store = createStore(retroApp);\n\n\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}